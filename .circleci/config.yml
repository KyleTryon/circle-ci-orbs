orbs:
  orb-tools: circleci/orb-tools@8.3.0
  rookout-node: rookout/rookout-node@dev:alpha


jobs:
  commit_trigger_message:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: git config --global user.email "sonario@rookout.com" && git config --global user.name "Sonario CircleCI"
      - run: export COMMIT_MSG=$(git show -s --format=%B -n 1 $CIRCLE_SHA1)
      - run: echo $COMMIT_MSG
      - run: export NEW_COMMIT_MSG="[prod_deploy_workflow]::$COMMIT_MSG" && git commit --allow-empty -m "$NEW_COMMIT_MSG" && git push --set-upstream origin $CIRCLE_BRANCH -f

  should_run_prod_deploy_workflow:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: |
          export COMMIT_MSG=$(git show -s --format=%B -n 1 $CIRCLE_SHA1)
          if [ "$COMMIT_MSG" != "[prod_deploy_workflow]" ]; then
            exit 1
          fi

  should_run_publish_dev_workflow:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: |
          export COMMIT_MSG=$(git show -s --format=%B -n 1 $CIRCLE_SHA1)
          if [ "$COMMIT_MSG" = "[prod_deploy_workflow]" ]; then
            exit 1
          fi

  my_job:
    docker:
      - image: circleci/node:10
    working_directory: ~/Temp
    steps:
      - checkout:
          path: ~/Rookout
      - run: cd ~/Rookout
      - run: cd ~/Rookout && pwd && git log --format=oneline -n 1 $CIRCLE_SHA1
      - rookout-node/run_script:
          users_script: "node --trace-warnings --trace-sync-io --title=xxxxxxx ~/Rookout/examples/example_app.js"
          rookout_tags: "asdf;asdf2"
      - rookout-node/run_script:
          users_script: "node ~/Rookout/examples/example_app.js"
      - rookout-node/run_script:
          users_script: "~/Rookout/examples/example_app.js"
      - rookout-node/run_script:
          users_script: "~/Rookout/examples/example_app.js p1 p2 p3"

# yaml anchor filters
integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/



integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

prod-deploy_requires: &prod-deploy_requires
  [notifytest-master, statustestpass-master, approvaltest-master, approval-notification-job-master]

req_req: &req_req
  [trigger-integration-master]

version: 2.1
workflows:
  pack-validate_publish-dev:
    jobs:
      - should_run_publish_dev_workflow
      - orb-tools/pack:
          requires:
            - should_run_publish_dev_workflow
      - orb-tools/publish-dev:
          orb-name: rookout/rookout-node
          requires:
            - orb-tools/pack
      - commit_trigger_message:
          requires:
            - orb-tools/publish-dev
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-dev
          ssh-fingerprints: 26:d8:fe:04:01:0f:a1:51:34:87:46:67:ed:70:36:79
          cleanup-tags: true
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              ignore: master
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-master
          ssh-fingerprints: 26:d8:fe:04:01:0f:a1:51:34:87:46:67:ed:70:36:79
          cleanup-tags: true
          tag: master
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              only: master

  integration_tests-prod_deploy:
    jobs:
      - should_run_prod_deploy_workflow
      - my_job:
          requires:
            - should_run_prod_deploy_workflow






      #- orb-tools/publish:
      #    orb-path: src/orb.yml
      #    orb-ref: rookout/rookout-node@dev:${CIRCLE_BRANCH}
      #    publish-token-variable: "$CIRCLECI_DEV_API_TOKEN"
      #    validate: true
      #- my_job:
      #    requires:
      #      - "orb-tools/publish"
      # increase version: (needs admin token)
      # circleci orb publish increment src/orb.yml rookout/rookout-node patch
